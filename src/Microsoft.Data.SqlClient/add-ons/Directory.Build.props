<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <!-- Import parent Directory.build.props -->
  <Import Project="..\..\Directory.Build.props" />
  
  <PropertyGroup>
    <ReferenceType Condition="'$(ReferenceType)'==''">Project</ReferenceType>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  
  <PropertyGroup>
    <TargetFrameworkMonikerAssemblyAttributesPath>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)"/>
  </ItemGroup>

  <Choose>
    <!-- Set Default Target Framework when building for Debug and Release configurations. (Visual Studio) -->
    <When Condition="'$(TestTargetOS)' == '' AND ('$(Configuration)' == 'Debug' OR '$(Configuration)' == 'Release')">
        <PropertyGroup>
          <TargetFrameworks>netcoreapp2.1</TargetFrameworks>
        </PropertyGroup>
    </When>
    <!-- Set Target Framework when TestTargetOS is not empty. (Command Line) -->
    <When Condition="'$(TestTargetOS)' != ''">
        <PropertyGroup>
          <TargetFrameworks Condition="'$(TestTargetOS)' == 'Windowsnetstandard' OR '$(TestTargetOS)' == 'Unixnetstandard'">netstandard2.0</TargetFrameworks>
          <TargetFrameworks Condition="'$(TestTargetOS)' == 'Windowsnetcoreapp' OR '$(TestTargetOS)' == 'Unixnetcoreapp'">netcoreapp2.1</TargetFrameworks>
          <TargetFrameworks Condition="('$(TestTargetOS)' == 'Windowsnetcoreapp' OR '$(TestTargetOS)' == 'Unixnetcoreapp') AND ($(ReferenceType)=='NetStandard' AND $(TargetNetStandardVersion)=='netstandard2.1')">netcoreapp3.1</TargetFrameworks>
          <TargetFrameworks Condition="'$(TestTargetOS)' == 'Windowsnetfx'">net46</TargetFrameworks>
      </PropertyGroup>
    </When>
    <!-- Set Target Framework when TestTargetOS is empty and Configuration is neither Debug nor Release. (Visual Studio) -->
    <Otherwise>
      <PropertyGroup>
        <TargetFrameworks></TargetFrameworks>
        <TargetFramework>$(Configuration.Split('-')[0])</TargetFramework>
      </PropertyGroup>
    </Otherwise>
  </Choose>
</Project>
